#!/bin/bash

# Configura√ß√£o: Para na primeira falha para evitar execu√ß√£o com erros
set -e

echo "üöÄ Iniciando Backend Node.js..."

# ============================================================
# CONFIGURA√á√ÉO DE AMBIENTE
# ============================================================
# Verifica se existe arquivo de configura√ß√£o .env
# Se n√£o existir e houver um .env.example, cria uma c√≥pia
# Isso garante que as vari√°veis de ambiente necess√°rias estejam dispon√≠veis
[ ! -f .env ] && [ -f .env.example ] && cp .env.example .env

# ============================================================
# INSTALA√á√ÉO DE DEPEND√äNCIAS
# ============================================================
# Verifica se a pasta node_modules existe
# Se n√£o existir, significa que as depend√™ncias n√£o foram instaladas
# Executa npm install para baixar e instalar todos os pacotes necess√°rios
if [ ! -d "node_modules" ]; then
    echo "üì¶ Pasta node_modules n√£o encontrada. Instalando depend√™ncias..."
    npm install
fi

# ============================================================
# PREPARA√á√ÉO DO BANCO DE DADOS
# ============================================================
# Executa as migra√ß√µes do banco de dados
# Isso cria/atualiza as tabelas e estruturas necess√°rias no banco
echo "üóÑÔ∏è Executando migra√ß√µes do banco de dados..."
npm run migrate

# Executa o seed do banco de dados
# Isso popula o banco com dados iniciais necess√°rios para o funcionamento
echo "üå± Populando banco de dados com dados iniciais..."
npm run seed

# ============================================================
# INICIALIZA√á√ÉO DO SERVIDOR
# ============================================================
# Inicia o servidor backend em modo desenvolvimento
# --host 0.0.0.0: Permite acesso de qualquer IP (√∫til para containers/VMs)
# --port 3000: Define a porta espec√≠fica para evitar conflitos
echo "üåê Iniciando servidor backend na porta 3000..."
npm run dev -- --host 0.0.0.0 --port 3000